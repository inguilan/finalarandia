generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  nombre   String
  email    String    @unique
  password String
  orders   Order[]
  products Product[]
  recipes  Recipe[]
  reviews  Review[]
}

model Order {
  id     Int         @id @default(autoincrement())
  fecha  DateTime    @default(now())
  estado String      @default("PENDIENTE")
  total  Float       @default(0.0)
  userId Int
  user   User        @relation(fields: [userId], references: [id])
  items  OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  productId Int
  orderId   Int?
  order     Order?  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Product {
  id          Int         @id @default(autoincrement())
  nombre      String
  precio      Float
  descripcion String?
  imagen      String?
  userId      Int?
  user        User?       @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
  reviews     Review[]
}

model Recipe {
  id            Int     @id @default(autoincrement())
  titulo        String
  instrucciones String
  imagen        String?
  userId        Int
  user          User    @relation(fields: [userId], references: [id])
}

model Review {
  id           Int     @id @default(autoincrement())
  calificacion Int
  comentario   String
  imagen       String?
  userId       Int
  productId    Int
  product      Product @relation(fields: [productId], references: [id])
  user         User    @relation(fields: [userId], references: [id])
}
